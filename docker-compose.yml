
version: "3.7"

services:  
  db:
    image: "postgres:12"
    container_name: oli_webservice_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/installation:/docker-entrypoint-initdb.d
    ports:
      - ${PG_PORT_EXPOSE}:5432
    networks:
      - soap-service-network

  pgbackups:
    image: prodrigestivill/postgres-backup-local
    container_name: oli_webservicegit_pgbackups
    restart: unless-stopped
    volumes:
      - ./db/backups:/backups
    links:
      - db
    depends_on:
      - db
    environment:
      - POSTGRES_HOST=${PG_HOST}
      - POSTGRES_DB=${PG_DATABASE}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - SCHEDULE=@daily
      - BACKUP_KEEP_WEEKS=4
      - HEALTHCHECK_PORT=80
    networks:
      - soap-service-network
  
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: oli_webservice_api
    restart: unless-stopped
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - NODE_ENV=${NODE_ENV}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
      - MQTT_URL=${MQTT_URL}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - ROUNDING=${ROUNDING}
    volumes:
        - ./api/logs:/home/node/app/logs
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - db
    networks:
      - soap-service-network

  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: oli_webservice_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - api
    networks:
      - soap-service-network

networks:
  soap-service-network:
    driver: bridge
