
version: "3.7"

services:  
  db:
    image: "postgres:12"
    container_name: oli_webservice_postgres
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE}
    volumes:
      - ./db/installation:/docker-entrypoint-initdb.d
    ports:
      - ${PG_PORT_EXPOSE}:5432
    networks:
      - service-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: oli_webservice_api
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - NODE_ENV=${NODE_ENV}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DATABASE=${PG_DATABASE}
    volumes:
        - ./api/logs:/home/node/app/logs
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - db
    networks:
      - service-network

#  webserver:
#    build:
#      context: ./nginx
#      dockerfile: Dockerfile
#    container_name: oli_webservice_nginx
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/certs:/etc/nginx/certs
#    depends_on:
#      - api
#    networks:
#      - service-network

networks:
  service-network:
    driver: bridge
